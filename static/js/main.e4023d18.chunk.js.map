{"version":3,"sources":["images/defaultImage.webp","components/Profile.js","components/Statistics.js","components/FriendList.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","defaultImage","followers","views","likes","className","src","alt","Statistics","title","stats","map","element","label","percentage","id","FriendList","friends","friend","class","isOnline","width","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2xCAAe,G,YAAA,IAA0B,2C,OCoD1BA,EAhDC,SAAC,GAQV,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,IACAC,EAKI,EALJA,SAKI,IAJJC,cAII,MAJKC,EAIL,EAHJC,EAGI,EAHJA,UACAC,EAEI,EAFJA,MACAC,EACI,EADJA,MAEA,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBF,UAAU,WACtD,mBAAGA,UAAU,OAAb,SAAqBR,IACrB,oBAAGQ,UAAU,MAAb,cAAqBP,KACrB,mBAAGO,UAAU,WAAb,SAAyBN,OAG3B,qBAAIM,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BH,OAE9B,+BACE,sBAAMG,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BF,OAE9B,+BACE,sBAAME,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,c,OCJvBI,EA1BI,SAAC,GAAuC,IAAD,IAApCC,aAAoC,MAA5B,eAA4B,EAAZC,EAAY,EAAZA,MAC5C,OACE,0BAASL,UAAU,aAAnB,UACGI,GAAS,oBAAIJ,UAAU,QAAd,SAAuBI,IAEjC,oBAAIJ,UAAU,YAAd,SACGK,EAAMC,KAAI,SAACC,GAAD,OACT,qBAAIP,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBO,EAAQC,QACjC,uBAAMR,UAAU,aAAhB,UAA8BO,EAAQE,WAAtC,SAFwBF,EAAQG,a,OCkB7BC,EAzBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,oBAAIZ,UAAU,cAAd,SACGY,EAAQN,KAAI,SAACO,GAAD,OACX,qBAAIC,MAAM,OAAV,UACE,sBAAMA,MAAM,SAAZ,SAAsBD,EAAOE,WAC7B,qBAAKD,MAAM,SAASb,IAAKY,EAAOlB,OAAQO,IAAI,GAAGc,MAAM,OACrD,mBAAGF,MAAM,OAAT,SAAiBD,EAAOrB,SAHJqB,EAAOH,U,OCCtB,SAASO,IACtB,OACE,gCACE,cAAC,EAAD,CACEzB,KAAM0B,EAAK1B,KACXC,IAAKyB,EAAKzB,IACVC,SAAUwB,EAAKxB,SACfC,OAAQuB,EAAKvB,OACbE,UAAWqB,EAAKb,MAAMR,UACtBC,MAAOoB,EAAKb,MAAMP,MAClBC,MAAOmB,EAAKb,MAAMN,QAEpB,cAAC,EAAD,CAAYM,MAAOc,IACnB,cAAC,EAAD,CAAYP,QAASA,OChB3BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4023d18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/defaultImage.efadb13d.webp\";","import PropTypes from \"prop-types\";\nimport \"../App\";\nimport defaultImage from \"../images/defaultImage.webp\";\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar = defaultImage,\n  followers,\n  views,\n  likes,\n}) => {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from \"prop-types\";\nimport \"../App\";\n\nconst Statistics = ({ title = \"Upload stats\", stats }) => {\n  return (\n    <section className=\"statistics\">\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <ul className=\"stat-list\">\n        {stats.map((element) => (\n          <li className=\"item\" key={element.id}>\n            <span className=\"label\">{element.label}</span>\n            <span className=\"percentage\">{element.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport \"../App\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map((friend) => (\n        <li class=\"item\" key={friend.id}>\n          <span class=\"status\">{friend.isOnline}</span>\n          <img class=\"avatar\" src={friend.avatar} alt=\"\" width=\"48\" />\n          <p class=\"name\">{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import \"./App.css\";\nimport Profile from \"./components/Profile\";\nimport user from \"./data/user.json\";\nimport Statistics from \"./components/Statistics\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport FriendList from \"./components/FriendList\";\nimport friends from \"./data/friends.json\";\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}